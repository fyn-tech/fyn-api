# Generated by Django 5.0.14 on 2025-10-26 12:27

import django.core.validators
import django.db.models.deletion
import job_manager.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("application_registry", "0001_initial"),
        ("runner_manager", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="JobInfo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique job identification number",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        default="job",
                        help_text="User provided name for the job",
                        max_length=100,
                    ),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0,
                        help_text="Queueing priority, will determine position in remote runner's queue.",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="Creation date of the job."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Date of last update."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("UI", "UPLOADING_INPUT_RESOURCES"),
                            ("QD", "QUEUED"),
                            ("PR", "PREPARING"),
                            ("FR", "FETCHING_RESOURCES"),
                            ("ST", "STARTING"),
                            ("RN", "RUNNING"),
                            ("PD", "PAUSED"),
                            ("CU", "CLEANING_UP"),
                            ("UR", "UPLOADING_RESULTS"),
                            ("SD", "SUCCEEDED"),
                            ("FD", "FAILED"),
                            ("FS", "FAILED_RESOURCE_ERROR"),
                            ("FM", "FAILED_TERMINATED"),
                            ("FO", "FAILED_TIMEOUT"),
                            ("FE", "FAILED_RUNNER_EXCEPTION"),
                        ],
                        default="QD",
                        help_text="Current status of the job.",
                        max_length=2,
                    ),
                ),
                (
                    "executable",
                    models.CharField(
                        default="",
                        help_text="Path to executable or command name",
                        max_length=500,
                    ),
                ),
                (
                    "command_line_args",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of command line arguments",
                    ),
                ),
                (
                    "working_directory",
                    models.CharField(
                        blank=True,
                        help_text="Working directory (on the remote runner) for job execution",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "local_working_directory",
                    models.CharField(
                        blank=True,
                        editable=False,
                        help_text="Local working directory path for this job",
                        max_length=500,
                    ),
                ),
                (
                    "exit_code",
                    models.IntegerField(
                        blank=True,
                        help_text="The exit code of the application which was executed.",
                        null=True,
                    ),
                ),
                (
                    "application_id",
                    models.ForeignKey(
                        help_text="The application id this job will execute",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="application_registry.appinfo",
                    ),
                ),
                (
                    "assigned_runner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="runner_manager.runnerinfo",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        help_text="User who created the job.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="job",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="JobResource",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique resource identification number",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("IN", "INPUT"),
                            ("OUT", "OUTPUT"),
                            ("CFG", "CONFIG"),
                            ("LOG", "LOG"),
                            ("TMP", "TEMPORARY"),
                            ("RES", "RESULT"),
                        ],
                        default="IN",
                        help_text="Type of resource (input, output, config, etc.)",
                        max_length=3,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        help_text="The actual file/resource",
                        storage=job_manager.models.PreserveFilenameStorage(),
                        upload_to=job_manager.models.job_resource_upload_path,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        help_text="Optional description of the resource",
                        max_length=200,
                    ),
                ),
                (
                    "original_file_path",
                    models.CharField(
                        blank=True,
                        help_text="Original file path where this resource was created (optional)",
                        max_length=500,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When the resource was created/uploaded",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="Who created/uploaded this resource (user or system)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        help_text="Job this resource belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resources",
                        to="job_manager.jobinfo",
                    ),
                ),
            ],
            options={
                "ordering": ["resource_type", "created_at"],
                "indexes": [
                    models.Index(
                        fields=["job", "resource_type"],
                        name="job_manager_job_id_65e265_idx",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="jobresource",
            constraint=models.UniqueConstraint(
                fields=("job", "file"), name="unique_job_file"
            ),
        ),
    ]
